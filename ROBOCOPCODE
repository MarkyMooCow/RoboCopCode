def vision_recognized_people(msg):
    global person_found
    vision_ctrl.disable_detection(rm_define.vision_detection_people)
    media_ctrl.play_sound(rm_define.media_sound_attacked)
    person_found = True
    print("Hey, Person Found")  

def scan_for_person_and_play_sound():
    global person_found
    vision_ctrl.enable_detection(rm_define.vision_detection_people)
    person_found = False
    while person_found == False:
        gimbal_ctrl.pitch_ctrl(30)
        gimbal_ctrl.yaw_ctrl(-90)
        gimbal_ctrl.yaw_ctrl(90)

def vision_recognized_marker_letter_F(msg):
    global marker_found
    vision_ctrl.detect_marker_and_aim(rm_define.marker_letter_F)
    vision_ctrl.disable_detection(rm_define.vision_detection_marker)
    gun_ctrl.fire_once()
    marker_found = True

def scan_for_fire_and_shoot():
    global marker_found
    vision_ctrl.enable_detection(rm_define.vision_detection_marker)
    marker_found = False
    while marker_found == False:
        gimbal_ctrl.pitch_ctrl(30)
        gimbal_ctrl.yaw_ctrl(-90)
        gimbal_ctrl.yaw_ctrl(90)
        
        
def return_to_start_from_room():
    global room_one_type
    global room_two_type
    global room_three_type
    global room_four_type
    
    if (room_one_type == 3):
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.32)
    elif (room_two_type == 3):
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 1.98)
        # End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        # Start of Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.7364)

    elif (room_three_type == 3):
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 4.582)
        # End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        # Start of Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.7364)

    elif (room_four_type == 3):
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 4.7196)
        # End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        # Start of Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.7364)

def move_to_room_from_start():
    
    if (room_one_type == 3):
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 180)
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.7364)
        # End of the hall
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        #Start of the next Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        

    elif (room_two_type == 3):
        chassis_ctrl.rotate_with_degree(180)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.7364)
        # End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        #Start of the next Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 4.582)

    elif (room_three_type == 3):
        chassis_ctrl.rotate_with_degree(180)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.7364)
        #End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 45)
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 45)
        gimbal_ctrl.recenter()
        #Start of the next Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 4.7196)

    elif (room_four_type == 3):
        chassis_ctrl.move_and_rotate(rm_define.anticlockwise, 360)
        gimbal_ctrl.recenter()

def start():
    
    robot_ctrl.set_mode(rm_define.robot_mode_free)

    room_one_type = 2 #Fire
    room_two_type = 2 #Poison
    room_three_type = 2 #Person
    room_four_type = 1 #Fire

        
    marker_found = False
    
    gimbal_ctrl.recenter()
    vision_ctrl.set_marker_detection_distance(3)
    gimbal_ctrl.set_rotate_speed(60)
    chassis_ctrl.set_trans_speed(0.75)
    chassis_ctrl.set_rotate_speed(30)
    #Heading towards the first room
    chassis_ctrl.move_with_distance(0, 5)
    chassis_ctrl.move_with_distance(0, 2.32)
    gimbal_ctrl.recenter()

    if (room_one_type == 1):
        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Drive through door.
        chassis_ctrl.move_with_distance(0, 3.98)
        #Rotate towards the wall.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        scan_for_fire_and_shoot()
        #Rotate towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        #Exit through the door.
        chassis_ctrl.move_with_distance(0, 3.98)
        #Turn to face the hallway to prepare to move towards next room.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        

    elif (room_one_type == 2): #Poision
        #Turn to face the hallway to prepare to move towards next room.
        pass

    elif (room_one_type == 3): #Person
        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Drive through door.
        chassis_ctrl.move_with_distance(0, 3.98)
        scan_for_person_and_play_sound()
        #Rotate towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 180)
        #Exit through the door
        chassis_ctrl.move_with_distance(0, 3.98)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.32)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 180)
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.32)
        
    #Head to the end of the hall
    chassis_ctrl.move_with_distance(0, 5)
    chassis_ctrl.move_with_distance(0, 1.98)
    #Head towards the second Hall
    chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 45)
    chassis_ctrl.move_with_distance(0, 3.11)
    chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 45)
    #Reset
    time.sleep(5)
    #Head to Room 3
    chassis_ctrl.move_with_distance(0, 5)

    if (room_two_type == 1):
        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Drive through door.
        chassis_ctrl.move_with_distance(0, 4)
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Drive to the Left
        chassis_ctrl.move_with_distance(0, 4.6)
        #Scan for fire
        scan_for_fire_and_shoot() 
        #Head to leave the room.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 180)
        chassis_ctrl.move_with_distance (0, 4.6)
        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        #Head through the door.
        chassis_ctrl.move_with_distance(0, 4)
        #Turn to face the hallway to prepare to move towards next room.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        gimbal_ctrl.recenter()
        

    elif (room_two_type == 2): #Poision
        #Do no enter.
        pass

    elif (room_two_type == 3): #Person
        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Drive through door.
        chassis_ctrl.move_with_distance(0, 4)
        gimbal_ctrl.recenter()
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        gimbal_ctrl.recenter()
        #Drive to the Left
        chassis_ctrl.move_with_distance(0, 4.6)
        gimbal_ctrl.recenter()
        #Scan for Person
        scan_for_person_and_play_sound()
        #Head to leave the room.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 180)
        chassis_ctrl.move_with_distance (0, 4.6)
        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        #Head through the door.
        chassis_ctrl.move_with_distance(0, 4)
        chassis.ctrl.rotate_with_degree(rm_define.clockwise, 90)
        chassis_ctrl.move_with_distance(0, 5)
        # End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        
        # Start of Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.7364)
        time.sleep(5)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 180)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.7364)
        # End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 45)
        
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 45)
        chassis_ctrl.move_with_distance(0, 5)


    #Head to room three
    chassis_ctrl.move_with_distance(0, 5)
    chassis_ctrl.move_with_distance(0, 3.8656)


    
    if (room_three_type == 1):
        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Drive through door
        chassis_ctrl.move_with_distance(0, 2.5)
        #Turn to the right
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        #Drive to the right
        chassis_ctrl.move_with_distance(0, 1.7)
        #Turn to the left
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Drive towards the back of the room.
        chassis_ctrl.move_with_distance(0, 4.4)
        #Turn to the right
        chassis_ctrl.move_with_degree(rm_define.clockwise, 90)
        # Move towards fire.
        chassis_ctrl.move_with_distance(0, 0.5)
        #Scan for fire
        scan_for_fire_and_shoot()   
        #Head to leave the room.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 180)
        chassis_ctrl.move_with_distance (0, 0.5)
        #Turn towards the front of the room.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Head towards the front of the room
        chassis_ctrl.move_with_distance(0, 4.4)
        #Turn to the right
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        #Head towards the door.
        chassis_ctrl.move_with_distance(0, 1.7)
        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Exit through the door.
        chassis_ctrl.move_with_distance(0, 2.5)
        #Turn to face the hallway to prepare to move towards next room.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        
    elif (room_three_type == 2): #Poision
        #Do not enter room.
        pass

    elif (room_three_type == 3): #Person

        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Drive through door
        chassis_ctrl.move_with_distance(0, 2.5)
        #Turn to the right
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        #Drive to the right
        chassis_ctrl.move_with_distance(0, 1.7)
        #Turn to the left
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Drive towards the back of the room.
        chassis_ctrl.move_with_distance(0, 4.35)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        # Move towards person
        chassis_ctrl.move_with_distance(0, 0.5)
        #Scan for Person
        scan_for_person_and_play_sound()  
        #Head to leave the room.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 180)
        chassis_ctrl.move_with_distance (0, 0.5) 
        #Turn towards the front of the room.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Head towards the front of the room
        chassis_ctrl.move_with_distance(0, 4.35)
        #Turn to the right
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        #Head towards the door.
        chassis_ctrl.move_with_distance(0, 1.7)
        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Exit through the door.
        chassis_ctrl.move_with_distance(0, 2.5)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        
        #Return back to start with the person
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 4.582)
        # End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        # Start of Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.7364)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 180)
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.7364)
        #End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 45)
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 45)
        gimbal_ctrl.recenter()
        #Start of the next Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 4.7196)


    #Continue to Room 4
    chassis_ctrl.move_with_distance(0, 5)
    chassis_ctrl.move_with_distance(0, 5)
    chassis_ctrl.move_with_distance(0, 0.43)

    
    if (room_four_type == 1):

        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Drive through door
        chassis_ctrl.move_with_distance(0, 2.4384)
        #Turn to the right
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        #Drive Move towards the Person
        chassis_ctrl.move_with_distance(0, 2.31)
        #Turn to the left
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        gimbal_ctrl.recenter()
        #Scan for Fire
        scan_for_fire_and_shoot()
        #Head to leave the room.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        chassis_ctrl.move_with_distance (0, 2.31)
        #Turn towards the front of the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        gimbal_ctrl.recenter()
        #Exit through the door
        chassis_ctrl.move_with_distance(0, 2.4384)
        #Turn back towards the start.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        gimbal_ctrl.recenter()
        #Return to Start from Room 4
        #Return to Start from Room 4
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 4.1496)
        # End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        # Start of Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.73)

    elif (room_four_type == 2): #Poision
        #Turn to face the hallway to prepare to move towards next room.
        pass
        #Turn around to head back towards the start.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 180)
        gimbal_ctrl.recenter()
        #Return to Start from Room 4
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 4.1496)
        # End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        # Start of Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.73)


    elif (room_four_type == 3): #Person

        #Turn towards the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        #Drive through door
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance(0, 2.4384)
        #Turn to the right
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        gimbal_ctrl.recenter()
        #Drive Move towards the Person
        chassis_ctrl.move_with_distance(0, 1.524)
        #Turn to the left
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        gimbal_ctrl.recenter()
        #Scan for Person
        scan_for_person_and_play_sound()
        #Head to leave the room.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        gimbal_ctrl.recenter()
        chassis_ctrl.move_with_distance (0, 1.524)
        #Turn towards the front of the door.
        chassis_ctrl.rotate_with_degree(rm_define.anticlockwise, 90)
        gimbal_ctrl.recenter()
        #Exit through the door
        chassis_ctrl.move_with_distance(0, 2.4384)
        #Turn towards back to the start.
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 90)
        gimbal_ctrl.recenter()
        #Return to Start from Room 4
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 4.1496)
        # End of Hall
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        
        chassis_ctrl.move_with_distance(0,3.11)
        chassis_ctrl.rotate_with_degree(rm_define.clockwise, 45)
        gimbal_ctrl.recenter()
        # Start of Hall
        time.sleep(5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 5)
        chassis_ctrl.move_with_distance(0, 2.7364)
        
